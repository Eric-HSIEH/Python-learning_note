■交叉驗證Cross validation

# 交叉驗證是統計學上將樣本切成多個部分進行訓練和測試的方式。
# 目的是避免依賴某一特定的訓練和測試資料產生偏差。

  - k交叉驗證
# 使用不同資料組合來驗證訓練的模型，假設有100個樣本區分為10等分，第一次可先使用後9等分訓練，剩餘1等分測試；
  之後再用第2等分測試，其餘9等分訓練，不斷交替換測試與訓練的資料，得到不同組合。

  - 載入套件
from sklearn.cross_validation import cross_val_score
from sklearn import datasets
from sklearn.cross_validation import train_test_split
from sklearn.neighbors import KNeighborsClassifier
import numpy as np

  - 導入資料
iris = datasets.load_iris()
X = iris.data
y = iris.target

  - KNN分類法，找附近10個鄰居
knn = KNeighborsClassifier(n_neighbors=10)

  - 第一次執行
scores = cross_val_score(knn,X,y,cv=5,scoring='accuracy')  # cv = 5代表分成5等分；accuracy代表一種方法，是顯示準確度高不高的方法
print(scores)
print(scores.mean())

  - 改變鄰居數，交差驗證
k_range = range(1,31)
k_scores = []
for k_number in k_range:
    knn = KNeighborsClassifier(n_neighbors=k_number)
    scores = cross_val_score(knn,X,y,cv=10,scoring='accuracy')
    k_scores.append(scores.mean())

  - 畫圖
plt.plot(k_range,k_scores)
plt.xlabel('Value of K for KNN')
plt.ylabel('Cross-Validated Accuracy')
plt.show()
